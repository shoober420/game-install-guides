Jak and Daxter

OpenGOAL
- download launcher (https://opengoal.dev/)
- install launcher and choose %USERPROFILE%/Downloads/jak1 as game and toolset folder
- download Jak and Daxter: The Precursor Legacy Black Label ISO
- place in %USERPROFILE%/Downloads/jak1 folder
- Install via ISO in launcher



Visual Studio
- run InstallScoop.bat to install scoop
- powershell
- scoop install git llvm nasm python task
- cd Downloads
- git clone https://github.com/open-goal/jak-project.git
- add "-march=native -msahf -O3 -pipe -fno-plt -fno-common -falign-functions=32 -fexcess-precision=fast -flto=auto" to lines 60 and 128
 + -fgraphite-identity, -floop-nest-optimize, -fdevirtualize-at-ltrans, -fipa-pta and -fuse-linker-plugin are not supported flags
- download Visual Studio (https://visualstudio.microsoft.com/downloads/)
- install and checkmark Desktop development with C++ and C++ CMake tools for Windows
- restart, then open Visual Studio installer again
- download preview build, checkmark Desktop development with C++ and C++ CMake tools for Windows
- restart
- skip account sign up
- Development settings: Visual C++
- Choose your color theme: Dark
- launch Visual Studio > right click > launch as administrator (C:\Program Files\Microsoft Visual Studio\2022\Preview\Common7\IDE\devenv.exe)
- Continue without code
- File > Open > CMake
- CMakeLists.txt
- Windows Release (clang)
- DLL Release - DLL OpenSSL|x64
- Build > Run Build Insights > Build All
- Build > Install jak
- download Jak and Daxter: The Precursor Legacy Black Label ISO
- extract ROM ISO into "%USERPROFILE%\Downloads\poop\jak-project\iso_data\jak1" directory
- open powershell
- cd Downloads/jak-project
- task set-game-jak1
- task set-decomp-ntscv1
 + copy jak-project/out/build/Debug directory to jak-project/out/build/Release
- task extract
- task repl
- repl (OpenGOAL) should now be running
- (mi)
- task boot-game
- gk.exe if game doesnt boot with "task boot-game" (jak-project/out/build/Release/gk.exe)



MSYS2
- download MSYS2 (https://www.msys2.org/)
- install MSYS2 in "C:\msys64" directory
- launch mingw64.exe in msys2 directory
- pacman -S mingw-w64-x86_64-toolchain mingw-w64-i686-toolchain mingw-w64-clang-x86_64-toolchain mingw-w64-clang-i686-toolchain mingw-w64-ucrt-x86_64-toolchain mingw-w64-cross-toolchain mingw-w64-x86_64-clang mingw-w64-i686-clang mingw-w64-ucrt-x86_64-clang mingw-w64-x86_64-nasm mingw-w64-i686-nasm mingw-w64-ucrt-x86_64-nasm mingw-w64-clang-x86_64-nasm mingw-w64-clang-i686-nasm mingw-w64-x86_64-SDL2 mingw-w64-i686-SDL2 mingw-w64-ucrt-x86_64-SDL2 mingw-w64-clang-x86_64-SDL2 mingw-w64-clang-i686-SDL2 mingw-w64-x86_64-zlib mingw-w64-i686-zlib mingw-w64-ucrt-x86_64-zlib mingw-w64-clang-x86_64-zlib mingw-w64-clang-i686-zlib mingw-w64-x86_64-libwinpthread mingw-w64-i686-libwinpthread mingw-w64-ucrt-x86_64-libwinpthread mingw-w64-clang-x86_64-libwinpthread mingw-w64-clang-i686-libwinpthread mingw-w64-cross-winpthreads mingw-w64-x86_64-cmake mingw-w64-i686-cmake mingw-w64-ucrt-x86_64-cmake mingw-w64-clang-x86_64-cmake mingw-w64-clang-i686-cmake mingw-w64-x86_64-binutils mingw-w64-cross-binutils mingw-w64-i686-binutils mingw-w64-ucrt-x86_64-binutils mingw-w64-clang-x86_64-binutils mingw-w64-clang-i686-binutils mingw-w64-x86_64-glew mingw-w64-i686-glew mingw-w64-ucrt-x86_64-glew mingw-w64-clang-x86_64-glew mingw-w64-clang-i686-glew mingw-w64-x86_64-libogg mingw-w64-i686-libogg mingw-w64-ucrt-x86_64-libogg mingw-w64-clang-x86_64-libogg mingw-w64-clang-i686-libogg mingw-w64-x86_64-libvorbis mingw-w64-i686-libvorbis mingw-w64-ucrt-x86_64-libvorbis mingw-w64-clang-x86_64-libvorbis mingw-w64-clang-i686-libvorbis mingw-w64-x86_64-openssl mingw-w64-ucrt-x86_64-openssl mingw-w64-clang-x86_64-openssl mingw-w64-clang-i686-openssl mingw-w64-x86_64-openldap mingw-w64-ucrt-x86_64-openldap mingw-w64-clang-x86_64-openldap mingw-w64-x86_64-curl mingw-w64-i686-curl mingw-w64-ucrt-x86_64-curl mingw-w64-clang-x86_64-curl mingw-w64-clang-i686-curl mingw-w64-x86_64-ninja mingw-w64-i686-ninja mingw-w64-ucrt-x86_64-ninja mingw-w64-clang-x86_64-ninja mingw-w64-clang-i686-ninja ninja openssl binutils curl cmake make git base base-devel vim
- pacman -Syyu
- git clone --recursive https://github.com/open-goal/jak-project.git
- cmake -B build && cmake --build build -j 8
- ./test.sh
